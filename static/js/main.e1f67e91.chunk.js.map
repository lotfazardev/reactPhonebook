{"version":3,"sources":["Components/Navbar/RightNavTitleCompo/RightNavTitle.js","Components/Navbar/RightNavItemCompo/RightNavItemCompo.js","Components/Navbar/RightNavContainerCompo/RightNavContainer.js","Components/Contacts/ContactButtonCompo/ContactButton.js","Components/Contacts/ContactSearchbarCompo/ContactSearchbar.js","Components/Contacts/ContactItemButtonCompo/ContactItemButton.js","Components/Contacts/ContactTabelCompo/ContactTabel.js","Components/Contacts/ContactContainerCompo/ContactContainer.js","App.js","serviceWorker.js","index.js"],"names":["LeftNavTitle","props","Col","className","id","title","RightLeftNavItems","tmp","selected","navItemIcon","navItem","LeftNavContainer","Row","Contact","style","backgroundColor","buttonColor","onClick","handelClick","buttonIcon","buttonName","ContactSreachbar","onChange","e","handelFilter","target","value","placeholder","ContactItemButton","itemButtonColor","itemButton","itemButtonLabel","ContactTabel","Table","responsive","header","name","family","tel","note","accessibility","users","map","currentValue","index","handelEdit","handelDelete","ContactContainer","handelAdd","HeaderData","ContactData","App","useState","ContactHeader","setContactData","SearchText","setSearchText","Container","fluid","Swal","mixin","input","confirmButtonText","showCancelButton","cancelButtonText","progressSteps","queue","text","inputPlaceholder","inputValidator","then","result","fire","icon","html","itemIndex","filter","item","indexArg","console","log","ans","length","element","objArr","searchText","trim","search","searchAlgorithm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"obAeeA,MAZf,SAAsBC,GAClB,OACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,yDACX,yBAAKA,UAAU,QACX,wBAAIC,GAAG,aACFH,EAAMI,U,YCSZC,MAdf,SAA2BL,GACvB,IAAIM,EAAMN,EAAMO,SAAW,oBAAsB,GACjD,OACI,kBAACN,EAAA,EAAD,CAAKC,UAAW,4EAA6EI,GACzF,kBAACL,EAAA,EAAD,CAAKC,UAAU,wFACX,0BAAMA,UAAWF,EAAMQ,YAAc,kBAEzC,kBAACP,EAAA,EAAD,CAAKC,UAAU,wCACVF,EAAMS,WCWRC,MAjBf,SAA0BV,GACtB,OACI,oCACI,kBAACW,EAAA,EAAD,CAAKT,UAAU,UAAUC,GAAG,iBACxB,kBAAC,EAAD,CAAcC,MAAOJ,EAAMI,SAE/B,kBAACO,EAAA,EAAD,CAAKT,UAAU,6BAA6BC,GAAG,iBAC3C,kBAAC,EAAD,CAAmBK,YAAY,YAAYC,QAAQ,+CACnD,kBAAC,EAAD,CAAmBD,YAAY,aAAaC,QAAQ,6CAAUF,SAAS,SACvE,kBAAC,EAAD,CAAmBC,YAAY,iBAAiBC,QAAQ,mEACxD,kBAAC,EAAD,CAAmBD,YAAY,eAAeC,QAAQ,sDACtD,kBAAC,EAAD,CAAmBD,YAAY,YAAYC,QAAQ,gC,YCIpDG,MAhBf,SAAiBZ,GACb,IAAMa,EAAM,CACRC,gBAAiBd,EAAMe,aAE3B,OACI,yBAAKb,UAAU,kEAAkEW,MAAOA,EACxFG,QAAShB,EAAMiB,aACX,kBAAChB,EAAA,EAAD,CAAKC,UAAU,mBACX,0BAAMA,UAAWF,EAAMkB,cAE3B,kBAACjB,EAAA,EAAD,CAAKC,UAAU,6BACVF,EAAMmB,c,MCGRC,MAhBf,SAA0BpB,GAItB,OACI,yBAAKE,UAAU,oBACX,yBAAKA,UAAU,6DACX,yBAAKA,UAAU,yEACX,0BAAMA,UAAU,iBAEpB,2BAAOmB,SATE,SAACC,GAClBtB,EAAMuB,aAAaD,EAAEE,OAAOC,QAQWvB,UAAU,gCAAgCwB,YAAY,2E,oBCKtFC,MAff,SAA2B3B,GACvB,IAAMa,EAAQ,CACVC,gBAAiBd,EAAM4B,iBAE3B,OACI,yBAAKZ,QAAShB,EAAMiB,YAAaf,UAAU,2DACvCW,MAAOA,GACP,0BAAMX,UAAWF,EAAM6B,aACvB,0BAAM3B,UAAU,QAAQF,EAAM8B,mBCuC3BC,MA7Cf,SAAsB/B,GAClB,OACI,kBAACgC,EAAA,EAAD,CAAO9B,UAAU,QAAQ+B,YAAU,GAC/B,+BACI,4BACI,4BAAKjC,EAAMkC,OAAO/B,IAClB,4BAAKH,EAAMkC,OAAOC,MAClB,4BAAKnC,EAAMkC,OAAOE,QAClB,4BAAKpC,EAAMkC,OAAOG,KAClB,4BAAKrC,EAAMkC,OAAOI,MAClB,4BAAKtC,EAAMkC,OAAOK,iBAG1B,+BAEQvC,EAAMwC,OAASxC,EAAMwC,MAAMC,KAAI,SAACC,EAAcC,GAC1C,OACI,4BACI,4BAAKA,EAAQ,GACb,4BAAKD,EAAaP,MAClB,4BAAKO,EAAaN,QAClB,4BAAKM,EAAaL,KAClB,4BAAKK,EAAaJ,MAClB,wBAAIpC,UAAU,oDACV,kBAAC,EAAD,CAAmB0B,gBAAgB,UAC/BE,gBAAgB,uCAChBD,WAAW,WACXZ,YAAa,kBAAIjB,EAAM4C,WAAWD,MAEtC,kBAAC,EAAD,CAAmBf,gBAAgB,UAC/BE,gBAAgB,qBAChBD,WAAW,kBACXZ,YAAa,kBAAIjB,EAAM6C,aAAaF,cCJ7DG,MAzBf,SAA0B9C,GACtB,OACI,oCACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,4EACX,kBAAC,EAAD,CACIiB,WAAW,sEACXD,WAAW,iBACXH,YAAY,UACZE,YAAajB,EAAM+C,YACvB,kBAAC,EAAD,CACIxB,aAAcvB,EAAMuB,gBAG5B,kBAACtB,EAAA,EAAD,CAAKC,UAAU,0BACX,kBAAC,EAAD,CACIgC,OAAQlC,EAAMgD,WACdR,MAAOxC,EAAMiD,YACbJ,aAAc7C,EAAM6C,aACpBD,WAAY5C,EAAM4C,gB,OC4JvBM,MA7Kf,WAAgB,IAAD,EAC6BC,mBAAS,CACjDhD,GAAI,IACJgC,KAAM,qBACNC,OAAQ,sEACRC,IAAK,0DACLC,KAAM,0DACNC,cAAe,sDAPJ,mBACNa,EADM,aAUyBD,mBAAS,KAVlC,mBAUNF,EAVM,KAUOI,EAVP,OAYuBF,mBAAS,IAZhC,mBAYNG,EAZM,KAYMC,EAZN,KAqJb,OACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC9C,EAAA,EAAD,CAAKR,GAAG,YACN,kBAACF,EAAA,EAAD,CAAKE,GAAG,MAAMD,UAAU,kBACtB,kBAAC,EAAD,CACEE,MAAM,6DAGV,kBAACH,EAAA,EAAD,CAAKE,GAAG,UAAUD,UAAU,oBAC1B,kBAAC,EAAD,CACE6C,UA7IV,WACEW,IAAKC,MAAM,CACTC,MAAO,OACPC,kBAAmB,kCACnBC,kBAAkB,EAClBC,iBAAkB,uCAClBC,cAAe,CAAC,SAAK,SAAK,SAAK,YAC9BC,MAAM,CACP,CACE7D,MAAO,qBACP8D,KAAM,wIACNC,iBAAkB,4EAClBC,eAAgB,SAAC3C,GACf,IAAKA,EACH,MAAO,mJAIb,CACErB,MAAO,sEACP8D,KAAM,0JACNC,iBAAkB,4EAClBC,eAAgB,SAAC3C,GACf,IAAKA,EACH,MAAO,mJAIb,CACEmC,MAAO,SACPxD,MAAO,0DACP8D,KAAM,6KACNC,iBAAkB,4EAClBC,eAAgB,SAAC3C,GACf,IAAKA,EACH,MAAO,mJAIb,CACErB,MAAO,6CACP8D,KAAM,wNACNC,iBAAkB,+EAEnBE,MAAK,SAACC,GACHA,EAAO7C,QACT4B,EAAe,GAAD,mBACTJ,GADS,CACI,CACdd,KAAMmC,EAAO7C,MAAM,GACnBW,OAAQkC,EAAO7C,MAAM,GACrBY,IAAKiC,EAAO7C,MAAM,GAClBa,KAAMgC,EAAO7C,MAAM,OAGvBiC,IAAKa,KAAK,CACRnE,MAAO,gEACPoE,KAAM,UACNC,KAAK,4MAGLZ,kBAAmB,8BAkFjBhB,aAlJV,SAAsB6B,GACpBrB,EAAeJ,EAAY0B,QAAO,SAACC,EAAMjC,GAAP,OAAiBA,IAAU+B,OAkJrD9B,WA7EV,SAAoBiC,GAClBnB,IAAKC,MAAM,CACTC,MAAO,OACPC,kBAAmB,kCACnBC,kBAAkB,EAClBC,iBAAkB,uCAClBC,cAAe,CAAC,SAAK,SAAK,SAAK,YAC9BC,MAAM,CACP,CACE7D,MAAO,qBACP8D,KAAM,oJACNC,iBAAkBlB,EAAY4B,GAAU1C,MAE1C,CACE/B,MAAO,sEACP8D,KAAM,oJACNC,iBAAkBlB,EAAY4B,GAAUzC,QAE1C,CACEwB,MAAO,SACPxD,MAAO,0DACP8D,KAAM,yLACNC,iBAAkBlB,EAAY4B,GAAUxC,KAE1C,CACEjC,MAAO,6CACP8D,KAAM,6IACNC,iBAAkBlB,EAAY4B,GAAUvC,QAEzC+B,MAAK,SAACC,GACP,GAAIA,EAAO7C,MAAO,CAChBqD,QAAQC,IAAIF,GACZ,IAAMvE,EAAM,CACV6B,KAAMmC,EAAO7C,MAAM,IAAMwB,EAAY4B,GAAU1C,KAC/CC,OAAQkC,EAAO7C,MAAM,IAAMwB,EAAY4B,GAAUzC,OACjDC,IAAKiC,EAAO7C,MAAM,IAAMwB,EAAY4B,GAAUxC,IAC9CC,KAAMgC,EAAO7C,MAAM,IAAMwB,EAAY4B,GAAUvC,MAE7C0C,EAAM/B,EAAYR,KAAI,SAACmC,EAAMjC,GAAP,OAAiBA,IAAUkC,EAAWvE,EAAMsE,KACtEvB,EAAe2B,GACftB,IAAKa,KAAK,CACRnE,MAAO,gEACPoE,KAAM,UACNC,KAAK,0LAGLZ,kBAAmB,8BAgCjBtC,aAAcgC,EACdP,WAAYI,EACZH,YAAaK,EAAW2B,OAAShC,EAAY0B,QAAO,SAACO,GAAD,OA5B9D,WAAwD,IAA/BC,EAA8B,uDAArB,GAAIC,EAAiB,uDAAJ,GACjD,GAAIA,EAAWC,OAAQ,CACrB,IAAK,IAAIT,KAAQO,EACf,IAAKA,EAAOP,GAAMU,OAAOF,GACvB,OAAO,EAGX,OAAO,EAEP,OAAO,EAmBgEG,CAAgBL,EAAS5B,MAAeL,QChKjGuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/B,MAAK,SAAAgC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL1B,QAAQ0B,MAAMA,EAAMC,c","file":"static/js/main.e1f67e91.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport './RightNavTitle.scss'\r\nfunction LeftNavTitle(props) {\r\n    return (\r\n        <Col className=\"no-padding d-none d-lg-flex justify-content-md-center\" >\r\n            <div className=\"pt-3\">\r\n                <h3 id=\"nav-title\">\r\n                    {props.title}\r\n                </h3>\r\n            </div>\r\n        </Col>);\r\n\r\n}\r\n\r\nexport default LeftNavTitle;","import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport './RightNavItemCompo.scss'\r\nfunction RightLeftNavItems(props) {\r\n    let tmp = props.selected ? \"nav-item-selected\" : \"\";\r\n    return (\r\n        <Col className={\"no-padding d-flex justify-content-end align-items-center nav-item col-12 \"+ tmp }>\r\n            <Col className=\"no-padding col-12 col-lg-3 nav-item d-flex justify-content-center align-items-center\">\r\n                <span className={props.navItemIcon + \" navItemIcon\"}></span>\r\n            </Col>\r\n            <Col className=\"no-padding d-none d-md-flex col-lg-8\">\r\n                {props.navItem}\r\n            </Col>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default RightLeftNavItems;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport LeftNavTitle from '../RightNavTitleCompo/RightNavTitle'\r\nimport \"./RightNavContainer.scss\"\r\nimport RightLeftNavItems from '../RightNavItemCompo/RightNavItemCompo';\r\nfunction LeftNavContainer(props) {\r\n    return (\r\n        <>\r\n            <Row className=\"nav-row\" id=\"nav-row-title\">\r\n                <LeftNavTitle title={props.title} />\r\n            </Row>\r\n            <Row className=\"nav-row d-flex flex-column\" id=\"nav-row-items\">\r\n                <RightLeftNavItems navItemIcon=\"icon-home\" navItem=\"داشبورد\"/> \r\n                <RightLeftNavItems navItemIcon=\"icon-users\" navItem=\"مخاطبین\" selected=\"true\"/> \r\n                <RightLeftNavItems navItemIcon=\"icon-star-full\" navItem=\"ستاره دار ها\"/> \r\n                <RightLeftNavItems navItemIcon=\"icon-pencil2\" navItem=\"یاداشت ها\"/> \r\n                <RightLeftNavItems navItemIcon=\"icon-exit\" navItem=\"خروج\"/>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LeftNavContainer;","import React from 'react';\r\nimport './ContactButton.scss';\r\nimport { Col } from 'react-bootstrap';\r\n\r\nfunction Contact(props){\r\n    const style={\r\n        backgroundColor: props.buttonColor\r\n    }\r\n    return(\r\n        <div className=\"ContactButton d-flex justify-content-center align-items-center \" style={style}\r\n        onClick={props.handelClick}>\r\n            <Col className=\"col-12 col-md-3\">\r\n                <span className={props.buttonIcon}></span>\r\n            </Col>\r\n            <Col className=\"d-none d-md-flex col-md-9\">\r\n                {props.buttonName}\r\n            </Col>\r\n        </div>\r\n    );\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport './ContactSearchbar.scss'\r\nfunction ContactSreachbar(props) {\r\n    const handelChange = (e) => {\r\n        props.handelFilter(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"flex-grow-1 pr-3\">\r\n            <div className=\"searchbar-container col-12 d-flex pr-3 align-items-center\">\r\n                <div className=\"filter-icon-div d-flex justify-content-center align-items-center pl-2\">\r\n                    <span className=\"icon-filter\"></span>\r\n                </div>\r\n                <input onChange={handelChange} className=\"border-0 searchbar-input pr-3\" placeholder=\"جست و جو کنید ...\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactSreachbar;","import React from 'react';\r\nimport './ContactItemButton.scss';\r\nfunction ContactItemButton(props) {\r\n    const style = {\r\n        backgroundColor: props.itemButtonColor\r\n    }\r\n    return (\r\n        <div onClick={props.handelClick} className=\"contact-item-btn align-items-center d-flex p-2 mr-1 ml-1\"\r\n            style={style}>\r\n            <span className={props.itemButton}></span>\r\n            <span className=\"pr-2\">{props.itemButtonLabel}</span>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ContactItemButton;\r\n","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport './ContactTabel.scss';\r\nimport ContactItemButton from '../ContactItemButtonCompo/ContactItemButton';\r\nfunction ContactTabel(props) {\r\n    return (\r\n        <Table className=\"tabel\" responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>{props.header.id}</th>\r\n                    <th>{props.header.name}</th>\r\n                    <th>{props.header.family}</th>\r\n                    <th>{props.header.tel}</th>\r\n                    <th>{props.header.note}</th>\r\n                    <th>{props.header.accessibility}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    props.users && props.users.map((currentValue, index) => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{currentValue.name}</td>\r\n                                <td>{currentValue.family}</td>\r\n                                <td>{currentValue.tel}</td>\r\n                                <td>{currentValue.note}</td>\r\n                                <td className=\"d-flex justify-content-center align-items-center\">\r\n                                    <ContactItemButton itemButtonColor=\"#F8AE45\"\r\n                                        itemButtonLabel=\"ویرایش\"\r\n                                        itemButton=\"icon-pen\" \r\n                                        handelClick={()=>props.handelEdit(index)}    \r\n                                        />\r\n                                    <ContactItemButton itemButtonColor=\"#FF4141\"\r\n                                        itemButtonLabel=\"حذف\"\r\n                                        itemButton=\"icon-user-minus\" \r\n                                        handelClick={()=>props.handelDelete(index)}\r\n                                        />\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n        </Table>\r\n\r\n    );\r\n}\r\n\r\nexport default ContactTabel;","import React, { useState } from 'react';\r\nimport './ContactContainer.scss';\r\nimport ContactButton from '../ContactButtonCompo/ContactButton'\r\nimport { Col } from 'react-bootstrap';\r\nimport ContactSreachbar from '../ContactSearchbarCompo/ContactSearchbar';\r\nimport ContactTabel from '../ContactTabelCompo/ContactTabel';\r\n\r\nfunction ContactContainer(props) {\r\n    return (\r\n        <>\r\n            <Col className=\"no-padding col-12 d-flex justify-content-between align-items-center mt-1\">\r\n                <ContactButton\r\n                    buttonName=\"افزودن مخاطب\"\r\n                    buttonIcon=\"icon-user-plus\"\r\n                    buttonColor=\"#5DA2D5\"\r\n                    handelClick={props.handelAdd} />\r\n                <ContactSreachbar \r\n                    handelFilter={props.handelFilter}\r\n                />\r\n            </Col>\r\n            <Col className=\"no-padding col-12 mt-3\">\r\n                <ContactTabel\r\n                    header={props.HeaderData}\r\n                    users={props.ContactData}\r\n                    handelDelete={props.handelDelete}\r\n                    handelEdit={props.handelEdit}\r\n                />\r\n            </Col>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ContactContainer;","import React, { useState } from 'react';\r\nimport './App.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport LeftNav from './Components/Navbar/RightNavContainerCompo/RightNavContainer'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport ContactContainer from './Components/Contacts/ContactContainerCompo/ContactContainer';\r\nimport Swal from 'sweetalert2/src/sweetalert2.js';\r\n\r\nfunction App() {\r\n  const [ContactHeader, setContactHeader] = useState({\r\n    id: \"#\",\r\n    name: \"نام\",\r\n    family: \"نام خانوادگی\",\r\n    tel: \"شماره تلفن\",\r\n    note: \"یادداشت ها\",\r\n    accessibility: \"دسترسی ها\"\r\n  });\r\n\r\n  const [ContactData, setContactData] = useState([]);\r\n\r\n  const [SearchText, setSearchText] = useState('');\r\n\r\n  function handelDelete(itemIndex) {\r\n    setContactData(ContactData.filter((item, index) => index !== itemIndex));\r\n  }\r\n\r\n  function handelAdd() {\r\n    Swal.mixin({\r\n      input: 'text',\r\n      confirmButtonText: 'بعدی &rarr;',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'انصراف',\r\n      progressSteps: ['۱', '۲', '۳', '۴']\r\n    }).queue([\r\n      {\r\n        title: 'نام',\r\n        text: 'نام مخاطب خود را وارد کنید !',\r\n        inputPlaceholder: \"اینجا بنویسید\",\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return 'پرکردن این ورودی الزامی است'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: 'نام خانوادگی',\r\n        text: 'فامیلی مخاطب خود را وارد کنید !',\r\n        inputPlaceholder: \"اینجا بنویسید\",\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return 'پرکردن این ورودی الزامی است'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        input: 'number',\r\n        title: 'شماره تلفن',\r\n        text: 'شماره تماس مخاطب خود را وارد کنید !',\r\n        inputPlaceholder: \"اینجا بنویسید\",\r\n        inputValidator: (value) => {\r\n          if (!value) {\r\n            return 'پرکردن این ورودی الزامی است'\r\n          }\r\n        }\r\n      },\r\n      {\r\n        title: 'یادداشت',\r\n        text: 'یادداشتی برای مخاطب خود بنویسید (اختیاری) !',\r\n        inputPlaceholder: \"اینجا بنویسید\"\r\n      },\r\n    ]).then((result) => {\r\n      if (result.value) {\r\n        setContactData([\r\n          ...ContactData, {\r\n            name: result.value[0],\r\n            family: result.value[1],\r\n            tel: result.value[2],\r\n            note: result.value[3]\r\n          }\r\n        ]);\r\n        Swal.fire({\r\n          title: 'عملیات موفق',\r\n          icon: 'success',\r\n          html: `\r\n            مخاطب مورد نظر شما با موفقیت ثبت شد\r\n          `,\r\n          confirmButtonText: 'حله !'\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  function handelEdit(indexArg) {\r\n    Swal.mixin({\r\n      input: 'text',\r\n      confirmButtonText: 'بعدی &rarr;',\r\n      showCancelButton: true,\r\n      cancelButtonText: 'انصراف',\r\n      progressSteps: ['۱', '۲', '۳', '۴']\r\n    }).queue([\r\n      {\r\n        title: 'نام',\r\n        text: 'نام مخاطب خود را ویرایش کنید !',\r\n        inputPlaceholder: ContactData[indexArg].name\r\n      },\r\n      {\r\n        title: 'نام خانوادگی',\r\n        text: 'نام مخاطب خود را ویرایش کنید !',\r\n        inputPlaceholder: ContactData[indexArg].family\r\n      },\r\n      {\r\n        input: 'number',\r\n        title: 'شماره تلفن',\r\n        text: 'شماره تلفن مخاطب خود را ویرایش کنید !',\r\n        inputPlaceholder: ContactData[indexArg].tel\r\n      },\r\n      {\r\n        title: 'یادداشت',\r\n        text: 'یادداشت خود را ویرایش کنید !',\r\n        inputPlaceholder: ContactData[indexArg].note\r\n      },\r\n    ]).then((result) => {\r\n      if (result.value) {\r\n        console.log(indexArg)\r\n        const tmp = {\r\n          name: result.value[0] || ContactData[indexArg].name,\r\n          family: result.value[1] || ContactData[indexArg].family,\r\n          tel: result.value[2] || ContactData[indexArg].tel,\r\n          note: result.value[3] || ContactData[indexArg].note\r\n        };\r\n        let ans = ContactData.map((item, index) => index === indexArg ? tmp : item)\r\n        setContactData(ans)\r\n        Swal.fire({\r\n          title: 'عملیات موفق',\r\n          icon: 'success',\r\n          html: `\r\n            مخاطب مورد نظر با بروزرسانی شد !\r\n          `,\r\n          confirmButtonText: 'حله !'\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  function searchAlgorithm(objArr = {}, searchText = \"\") {\r\n    if (searchText.trim()) {\r\n      for (let item in objArr) {\r\n        if (~objArr[item].search(searchText)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row id=\"main-row\">\r\n        <Col id=\"nav\" className=\"col-1 col-lg-2\">\r\n          <LeftNav\r\n            title=\"پنل کاربری\"\r\n          />\r\n        </Col>\r\n        <Col id=\"article\" className=\"col-11 col-lg-10\">\r\n          <ContactContainer\r\n            handelAdd={handelAdd}\r\n            handelDelete={handelDelete}\r\n            handelEdit={handelEdit}\r\n            handelFilter={setSearchText}\r\n            HeaderData={ContactHeader}\r\n            ContactData={SearchText.length ? ContactData.filter((element) => searchAlgorithm(element, SearchText)) : ContactData} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}